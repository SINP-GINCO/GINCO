/**
 * Scripts for DEE Export management
 * Actions are sent via Ajax, and get back status of the export job.
 * Status are:
 * - 'NOT FOUND'; No message with this id
 * - 'PENDING'; Queued, waiting to be consumed
 * - 'RUNNING'; Is being consumed
 * - 'COMPLETED'; Has been consumed and terminated normally
 * - 'TO CANCEL'; A 'cancel' signal has been sent, the consumer must handle it
 * -  'CANCELLED'; Has been cancelled, the consumer terminated and cancelled the task
 */


/**
 * Custom prompt to get user comment when generating DEE
 */
/*
function CustomPrompt(){
    this.render = function(jddId, exportFileId, deeDialogTitle, deeDialog, deeAction){
        var dialogoverlay = document.getElementById('dialogoverlay');
        var dialogbox = document.getElementById('dialogbox');
        dialogoverlay.style.display = "block";
        dialogbox.style.display = "block";
        document.getElementById('dialogboxhead').innerHTML = deeDialogTitle;
        document.getElementById('dialogboxbody').innerHTML = deeDialog;
        document.getElementById('dialogboxfoot').innerHTML = '<button onclick="Prompt.check_empty(\''+jddId+'\', \''+exportFileId+'\', \''+deeAction+'\')">Valider</button> <button onclick="Prompt.cancel()">Annuler</button>';
    }
    this.cancel = function(){
        document.getElementById('dialogbox').style.display = "none";
        document.getElementById('dialogoverlay').style.display = "none";
    }
    this.ok = function(jddId, exportFileId, deeAction){
        var comment = document.getElementById('prompt_comment').value;
        if (deeAction != 'delete') {
            addExportJob(jddId, exportFileId, deeAction, comment);
        } else {
            cancelExport(jddId, exportFileId, comment);
        }
        document.getElementById('dialogbox').style.display = "none";
        document.getElementById('dialogoverlay').style.display = "none";
    }
    this.check_empty = function(jddId, exportFileId, deeAction){
        if (document.getElementById('prompt_comment').value == "" && deeAction != 'create') {
            alert("Vous n'avez pas laissé de commentaire !");
        } else if (document.getElementById('prompt_comment').value.length > 6000) {
            alert("Votre commentaire ne doit pas dépasser 6000 caractères.");
        } else {
            Prompt.ok(jddId, exportFileId, deeAction);
        }
    }

}
Prompt = new CustomPrompt();

*/


/**
 * Update status and content divs for given submission.
 * If status is not given, launch a ajax request to get it.
 *
 * @param $jddId
 * @param $status
 */
function updateDEEStatusAndContent($jddId, $status = null) {
    console.log('updateDEEstatusandContent' + $jddId);

    if ($status) {
        updateDEEStatusDiv($jddId, $status);
        updateDEEContentDiv($jddId, $status);
    }
    else {
        $.getJSON("{{ path('dee_status') }}", {
            jddId: $jddId
        }, function (data) {
            updateDEEStatusDiv($jddId, data.status);
            updateDEEContentDiv($jddId, data.status, data.progress);
        });
    }
}

/**
 * Search all PENDING and RUNNING and TO CANCEL jobs (by the content of the hidden status div)
 * And launch a ajax request to retrieve their status and progress
 * Then update status and content divs.
 */
function updateAllDEEPendingAndRunningTasks() {
    // var $exportFileIds = [];
    console.log('updateAllDEEPendingAndRunningTasks');
    var $jddIds = [];
    $('.dee-status').each(function() {
        if ( $(this).html() == 'RUNNING' || $(this).html() == 'PENDING' || $(this).html() == 'TO CANCEL') {
            // var $exportFileId = $(this).attr('data-export-file-id');
            // $exportFileIds.push($exportFileId);
            var $jddId = $(this).attr('data-jdd-id');
            $jddIds.push($jddId);
        }
    });

    if ($jddIds.length) {
        $.getJSON("{{ path('dee_status_all') }}", {
            // submissionIds: $exportFileIds,
            jddIds: $jddIds
        }, function (data) {
            $.each(data, function (index, value) {
                updateDEEStatusDiv(value.jddId, value.status);
                updateDEEContentDiv(value.jddId, value.status, value.progress);
            });
        });
    }
}

/**
 * Update status div alone.
 * The status div is hidden with css, and is used by the scripts
 * to know if there is PENDING or RUNNING jobs (needing to ask periodically for their status)
 *
 * @param $jddId
 * @param $status
 */
function updateDEEStatusDiv($jddId, $status) {
    var $statusDiv = $("div.dee-status[data-jdd-id='" + $jddId + "']");
    $statusDiv.html($status);
}

/**
 * Update content div alone.
 * The content div is visible and shows:
 *  - the download link when available
 *  - the progress bar when the export job is running
 *  - action links: launch, cancel, relaunch
 *
 * @param $jddId
 * @param $status
 * @param $progress
 */
function updateDEEContentDiv($jddId, $status, $progress = 0) {
    console.log('updateDEEContentDiv '+$jddId);
    var $contentDiv = $("div.dee-content[data-jdd-id='" + $jddId + "']");
    // var $submissionStep = $contentDiv.attr('data-submission-step');
    // var $exportFileId = $contentDiv.attr('data-export-file-id');
    var $actions = getActions($status);

    $contentDiv.html('');
    var table = $('<table></table>');
    var row = $('<tr style="text-align:center"></tr>');
    table.append(row);

    // Action links
    if ($.inArray( 'Lancer', $actions ) != -1) {
        console.log('Action lancer');
        var $launchLink = $("<td><a title='Générer la DEE' href=''> " +
                "<span class='glyphicon glyphicon-play' aria-hidden='true'></span></a></td>");
        row.append($launchLink);
        $launchLink.click( function(e) {
            e.preventDefault();
            /*var deeDialogTitle = "Génération d'une DEE";
            var deeDialog = "<p>Vous allez générer une DEE. Une notification va être envoyée à la plateforme nationale,";
            deeDialog += " Vous pouvez éventuellement ajouter un commentaire.</p>";
            deeDialog += "<textarea id='prompt_comment'></textarea>";
            var deeAction = 'create';

            Prompt.render($jddId, $exportFileId, deeDialogTitle, deeDialog, deeAction); */
            addExportJob($jddId, null, null);

        });
    } {#else if ($.inArray( 'Relancer', $actions ) != -1 && $submissionStep == 'VALIDATE') {
        var $launchAgainLink = $("<td><a title='Regénérer' href=''> {% image '@IgnGincoBundle/Resources/public/img/refresh_arrow.png' %}<img src='{{ asset_url }}' />{% endimage %} </a></td>");
        row.append($launchAgainLink);
        $launchAgainLink.click( function(e) {
            e.preventDefault();
            var deeDialogTitle = "Génération d'une DEE";
            var deeDialog = "<p>Vous allez regénérer une DEE. Une notification va être envoyée à la plateforme nationale,";
            deeDialog += " veuillez décrire les modifications du jeu de données qui amènent à regénérer la DEE.</p>";
            deeDialog += "<textarea id='prompt_comment'></textarea>";
            var deeAction = 'update';
            Prompt.render($jddId, $exportFileId, deeDialogTitle, deeDialog, deeAction);
        });
    } else if ($submissionStep != 'VALIDATE'){
        row.append("<td> {% image '@IgnGincoBundle/Resources/public/img/refresh_arrow_grey.png' %}<img src='{{ asset_url }}' />{% endimage %} </td>");
    }

    // Download link if file is available
    if ($status == 'COMPLETED') {
        var $downloadLink = $("<td><a href='/gmlexport/download?id=" + $exportFileId + "'> {% image '@IgnGincoBundle/Resources/public/img/download.png' %}<img src='{{ asset_url }}' />{% endimage %} </a></td>");
        row.append($downloadLink);
    } else if ($status == 'ABORTED') {
        row.append("<td> {% image '@IgnGincoBundle/Resources/public/img/warning_red.png' %}<img src='{{ asset_url }}' title='Erreur lors de la génération DEE' />{% endimage %} </td>");
    } else {
        row.append("<td> {% image '@IgnGincoBundle/Resources/public/img/download_grey.png' %}<img src='{{ asset_url }}' title='Télécharger les DEE' />{% endimage %} </td>");
    }
#}
    if ($.inArray( 'Annuler', $actions ) != -1) {
        var $cancelLink = $("<td><a href='' title='Annuler'>" +
                "<span class='glyphicon glyphicon glyphicon-remove-sign' aria-hidden='true'></span></a></td>");
        row.append($cancelLink);
        $cancelLink.click( function(e) {
            e.preventDefault();
            /*var deeDialogTitle = "Suppression d'une DEE";
            var deeDialog = "<p>Vous allez supprimer une DEE. Une notification va être envoyée à la plateforme nationale,";
            deeDialog += " veuillez décrire raisons de cette suppression.</p>";
            deeDialog += "<textarea id='prompt_comment'></textarea>";
            var deeAction = 'delete';
            Prompt.render($jddId, $exportFileId, deeDialogTitle, deeDialog, deeAction);
            */
            $.getJSON( "{{ path('dee_cancel_generation') }}", {
                // exportFileId: $exportFileId,
                // deeAction: $deeAction,
                // comment: $comment,
                jddId: $jddId
            });
        });
    } {#else {
        row.append("<td> {% image '@IgnGincoBundle/Resources/public/img/delete_x_icon_grey.png' %}<img src='{{ asset_url }}' title='Annuler' />{% endimage %} </td>");
    }#}

    // Update progress bar if RUNNING
    var $progressBar = $contentDiv.parent().find('div.progress-bar');
    var $labelDiv = $contentDiv.parent().find('div.progress-label');

    if ($status == 'RUNNING' || $status == 'PENDING') {
        if ($progressBar.parent().parent().hasClass('hidden')) {
            $progressBar.parent().parent().removeClass('hidden');
            $labelDiv.removeClass('hidden');
        }
        $progressBar.css('width', $progress+'%').attr('aria-valuenow', $progress).html( $progress+'%');

        var $label = 'Génération DEE ' + (($status == 'RUNNING') ? 'en cours...' : 'en attente...');
        $labelDiv.html($label);
    }
    // If not RUNNING remove progress bar
    else {
        $progressBar.parent().parent().addClass('hidden');
        $labelDiv.addClass('hidden');
    }

    $contentDiv.append(table);
}

/**
 * Return list of actions available by status
 *
 * @param $status
 * @returns {Array}
 */
function getActions($status) {
    var $actions = [];
    switch ($status) {
        case 'NOT FOUND':
            $actions = ['Lancer'];
            break;
        case 'PENDING':
        case 'RUNNING':
            $actions = ['Annuler'];
            break;
        case 'COMPLETED':
        case 'ERROR':
        case 'ABORTED':
            // $actions = ['Relancer', 'Annuler'];
            $actions = ['Lancer', 'Annuler'];
            break;
        default:
            $actions = ['Lancer', 'Annuler'];
            break;
    }
    return $actions;
}

/**
 * Ajax request to add an export job (and launch jobs if not already running)
 *
 * @param $jddId
 * @param $exportFileId
 * @param $deeAction
 * @parma $comment
 */
function addExportJob($jddId, $deeAction, $comment) {
    $.getJSON( "{{ path('dee_generate') }}", {
        // exportFileId: $exportFileId,
        // deeAction: $deeAction,
        // comment: $comment,
        jddId: $jddId
    },function( data ) {
        console.log('addExportJob returned');
        if (data.success) {
            updateDEEStatusAndContent($jddId, data.status);
         //   window.location.reload(true);
        }
    });
}

/**
 * Ajax request to cancel a job and delete export file.
 * By SQL cascade it is also removed from jdd table.
 *
 * @param $jddId
 * @param $exportFileId
 * @param $comment
 */
function cancelExport($jddId, $exportFileId, $comment) {
    $.getJSON( "/gmlexport/cancel-export", {
        jddId: $jddId,
        id: $exportFileId,
        comment: $comment
    },function( data ) {
        if (data.success) {
            updateDEEStatusAndContent($jddId, $exportFileId, data.status);
            window.location.reload(true);
        }
    });
}


var DEEtimerId;

$(function(){
    console.log('Coucou');
    $('.dee-content').each(function() {
        // var $exportFileId = $(this).attr('data-export-file-id');
        var $jddId = $(this).attr('data-jdd-id');
        updateDEEStatusAndContent($jddId); //, $exportFileId);
    });

    // Periodically update progress for running and pending jobs
    DEEtimerId = setInterval(updateAllDEEPendingAndRunningTasks , 1000);
});