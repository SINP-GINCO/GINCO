/**
 * Scripts for DEE Export management
 * Actions are sent via Ajax, and get back status of the export job.
 * Status are:
 * - 'NOT FOUND'; No message with this id
 * - 'PENDING'; Queued, waiting to be consumed
 * - 'RUNNING'; Is being consumed
 * - 'COMPLETED'; Has been consumed and terminated normally
 * - 'TO CANCEL'; A 'cancel' signal has been sent, the consumer must handle it
 * -  'CANCELLED'; Has been cancelled, the consumer terminated and cancelled the task
 */


/**
 * Custom prompt to get user comment when generating DEE
 */
/*
function CustomPrompt(){
    this.render = function(jddId, exportFileId, deeDialogTitle, deeDialog, deeAction){
        var dialogoverlay = document.getElementById('dialogoverlay');
        var dialogbox = document.getElementById('dialogbox');
        dialogoverlay.style.display = "block";
        dialogbox.style.display = "block";
        document.getElementById('dialogboxhead').innerHTML = deeDialogTitle;
        document.getElementById('dialogboxbody').innerHTML = deeDialog;
        document.getElementById('dialogboxfoot').innerHTML = '<button onclick="Prompt.check_empty(\''+jddId+'\', \''+exportFileId+'\', \''+deeAction+'\')">Valider</button> <button onclick="Prompt.cancel()">Annuler</button>';
    }
    this.cancel = function(){
        document.getElementById('dialogbox').style.display = "none";
        document.getElementById('dialogoverlay').style.display = "none";
    }
    this.ok = function(jddId, exportFileId, deeAction){
        var comment = document.getElementById('prompt_comment').value;
        if (deeAction != 'delete') {
            generateDEE(jddId, exportFileId, deeAction, comment);
        } else {
            cancelExport(jddId, exportFileId, comment);
        }
        document.getElementById('dialogbox').style.display = "none";
        document.getElementById('dialogoverlay').style.display = "none";
    }
    this.check_empty = function(jddId, exportFileId, deeAction){
        if (document.getElementById('prompt_comment').value == "" && deeAction != 'create') {
            alert("Vous n'avez pas laissé de commentaire !");
        } else if (document.getElementById('prompt_comment').value.length > 6000) {
            alert("Votre commentaire ne doit pas dépasser 6000 caractères.");
        } else {
            Prompt.ok(jddId, exportFileId, deeAction);
        }
    }

}
Prompt = new CustomPrompt();

*/


/**
 * Update status and content divs for given submission.
 * If status is not given, launch a ajax request to get it.
 *
 * @param $jddId
 * @param $status
 */
function updateDEEDataAndContent(jddId, data) {
    console.log('updateDEEstatusandContent' + jddId);

    if (data) {
        updateDEEData(jddId, data);
        updateDEEContent(jddId);
    }
    else {
        $.getJSON("{{ path('dee_status') }}", {
            jddId: jddId
        }, function (data) {
            updateDEEData(jddId, data);
            updateDEEContent(jddId);
        });
    }
}

/**
 * Search all PENDING and RUNNING and TO CANCEL jobs (by the content of the hidden status div)
 * And launch a ajax request to retrieve their status and progress
 * Then update status and content divs.
 */
function updateAllDEEGeneratingTasks() {
    // var $exportFileIds = [];
    console.log('updateAllDEEGeneratingTasks');
    var jddIds = [];
    $('div.dee').each(function() {
        if ( $(this).data('dee-status') == 'GENERATING') {
            // var $exportFileId = $(this).attr('data-export-file-id');
            // $exportFileIds.push($exportFileId);
            var jddId = $(this).attr('data-jdd-id');
            jddIds.push(jddId);
        }
    });

    if (jddIds.length) {
        $.getJSON("{{ path('dee_status_all') }}", {
            // submissionIds: $exportFileIds,
            jddIds: jddIds
        }, function (data) {
            $.each(data, function (index, value) {
                updateDEEData(value.jddId, value);
                updateDEEContent(value.jddId);
            });
        });
    }
}

/**
 * Update data stored in a div.dee
 * And describinb the state of the dee generation process
 *
 * @param jddId
 * @param data
 */
function updateDEEData(jddId, data) {
    var deeDiv = $("div.dee[data-jdd-id='" + jddId + "']");

    // DEE status
    if ("dee" in data && "status" in data.dee ) {
        deeDiv.data('dee-status', data.dee.status);
    } else {
        deeDiv.data('dee-status', 'NO DEE');
    }

    // RabbitMQ message status and progress
     if ("message" in data && "status" in data.message ) {
        deeDiv.data('message-status', data.message.status);
        deeDiv.data('message-progress', data.message.progress);
    } else {
        deeDiv.data('message-status', 'NOT FOUND');
        deeDiv.data('message-progress', 0);
    }
}

/**
 * Update content div alone.
 * The content div is visible and shows:
 *  - the download link when available
 *  - the progress bar when the export job is running
 *  - action links: launch, cancel, relaunch
 *
 * @param $jddId
 * @param $status
 * @param $progress
 */
function updateDEEContent(jddId) {
    console.log('updateDEEContent '+jddId);

    var deeDiv = $("div.dee[data-jdd-id='" + jddId + "']");
    var contentDiv = deeDiv.find("div.dee-content");
    // var $submissionStep = $contentDiv.attr('data-submission-step');
    // var $exportFileId = $contentDiv.attr('data-export-file-id');

    var deeStatus = deeDiv.data('dee-status');
    var messageStatus = deeDiv.data('message-status');
    var messageProgress = deeDiv.data('message-progress');

    // Display actions depending on DEEStatus
    contentDiv.html('');
    var actions = $('<span class="text-center"></span>');
    contentDiv.append(actions);

    // GenerateDEE
    // TODO: check if the jdd a au moins une soumission publiée
    if (deeStatus != 'GENERATING') {

        console.log('Action lancer/relancer');
        var icon = 'glyphicon-play-circle';
        if (deeStatus == 'OK')
            icon = 'glyphicon-repeat';

        var launchLink = $("<a title='Générer la DEE' href=''> " +
                "<span class='glyphicon " + icon + "' aria-hidden='true'></span></a>");
        actions.append(launchLink);
        launchLink.click( function(e) {
            e.preventDefault();
            /*var deeDialogTitle = "Génération d'une DEE";
             var deeDialog = "<p>Vous allez générer une DEE. Une notification va être envoyée à la plateforme nationale,";
             deeDialog += " Vous pouvez éventuellement ajouter un commentaire.</p>";
             deeDialog += "<textarea id='prompt_comment'></textarea>";
             var deeAction = 'create';

             Prompt.render($jddId, $exportFileId, deeDialogTitle, deeDialog, deeAction); */
             generateDEE(jddId, null, null);
        });
    }

    {#else if ($.inArray( 'Relancer', $actions ) != -1 && $submissionStep == 'VALIDATE') {
        var $launchAgainLink = $("<td><a title='Regénérer' href=''> {% image '@IgnGincoBundle/Resources/public/img/refresh_arrow.png' %}<img src='{{ asset_url }}' />{% endimage %} </a></td>");
        row.append($launchAgainLink);
        $launchAgainLink.click( function(e) {
            e.preventDefault();
            var deeDialogTitle = "Génération d'une DEE";
            var deeDialog = "<p>Vous allez regénérer une DEE. Une notification va être envoyée à la plateforme nationale,";
            deeDialog += " veuillez décrire les modifications du jeu de données qui amènent à regénérer la DEE.</p>";
            deeDialog += "<textarea id='prompt_comment'></textarea>";
            var deeAction = 'update';
            Prompt.render($jddId, $exportFileId, deeDialogTitle, deeDialog, deeAction);
        });
    } else if ($submissionStep != 'VALIDATE'){
        row.append("<td> {% image '@IgnGincoBundle/Resources/public/img/refresh_arrow_grey.png' %}<img src='{{ asset_url }}' />{% endimage %} </td>");
    }
#}
    // Download link if file is available
    if (deeStatus == 'OK') {
        var downloadLink =$("<a title='Télécharger la DEE' href=''> " +
                "<span class='glyphicon glyphicon-download-alt' aria-hidden='true'></span></a>");
        actions.append(downloadLink);
    }

    // Cancel DEE generation (and come back to last version)
    if (deeStatus == 'GENERATING') {

        var cancelLink = $("<a href='' title='Annuler'>" +
                "<span class='glyphicon glyphicon glyphicon-remove-sign' aria-hidden='true'></span></a>");
        actions.append(cancelLink);
        cancelLink.click( function(e) {
            e.preventDefault();
            $.getJSON( "{{ path('dee_cancel_generation') }}", {
                jddId: jddId
            });
        });
    }

    // Delete DEE
    if (deeStatus == 'OK') {

        var deleteLink = $("<a href='' title='Supprimer la DEE'>" +
                "<span class='glyphicon glyphicon glyphicon-remove-sign' aria-hidden='true'></span></a>");
        actions.append(deleteLink);
        deleteLink.click( function(e) {
            e.preventDefault();
            /*var deeDialogTitle = "Suppression d'une DEE";
            var deeDialog = "<p>Vous allez supprimer une DEE. Une notification va être envoyée à la plateforme nationale,";
            deeDialog += " veuillez décrire raisons de cette suppression.</p>";
            deeDialog += "<textarea id='prompt_comment'></textarea>";
            var deeAction = 'delete';
            Prompt.render($jddId, $exportFileId, deeDialogTitle, deeDialog, deeAction);
            */
            deleteDEE(jddId);
        });
    }

    {#else {
        row.append("<td> {% image '@IgnGincoBundle/Resources/public/img/delete_x_icon_grey.png' %}<img src='{{ asset_url }}' title='Annuler' />{% endimage %} </td>");
    }#}


    // todo: remove !
    var statuss = $('<p></p>').html(deeStatus + '<br>' + messageStatus + '<br>' + messageProgress);
    contentDiv.append(statuss);


    // Update progress bar if DEE is GENERATING
    var progressBar = deeDiv.find('div.progress-bar');
    var labelDiv = deeDiv.find('div.progress-label');

    if (deeStatus == 'GENERATING') {
        if (progressBar.parent().parent().hasClass('hidden')) {
            progressBar.parent().parent().removeClass('hidden');
            labelDiv.removeClass('hidden');
        }
        progressBar.css('width', messageProgress +'%').attr('aria-valuenow', messageProgress).html( messageProgress + '%');

        var label = 'Génération DEE ' + ((messageStatus == 'RUNNING') ? 'en cours...' :
                        ((messageStatus == 'PENDING') ?  'en attente...' : 'annulation...'));
        labelDiv.html(label);
    }
    // If not GENERATING remove progress bar
    else {
        progressBar.parent().parent().addClass('hidden');
        labelDiv.addClass('hidden');
    }
}

/**
 * Ajax request to add an export job (and launch jobs if not already running)
 *
 * @param $jddId
 * @param $exportFileId
 * @param $deeAction
 * @parma $comment
 */
function generateDEE(jddId, $deeAction, $comment) {
    $.getJSON( "{{ path('dee_generate') }}", {
        // exportFileId: $exportFileId,
        // deeAction: $deeAction,
        // comment: $comment,
        jddId: jddId
    },function( data ) {
        console.log('generateDEE returned');
        if (data.success) {
            updateDEEDataAndContent(jddId, data);
        }
    });
}

/**
 * Ajax request to delete a DEE
 *
 * @param $jddId
 * @param $exportFileId
 * @param $deeAction
 * @parma $comment
 */
function deleteDEE(jddId, $deeAction, $comment) {
    $.getJSON( "{{ path('dee_delete') }}", {
        // exportFileId: $exportFileId,
        // deeAction: $deeAction,
        // comment: $comment,
        jddId: jddId
    },function( data ) {
        console.log('deleteDEE returned');
        if (data.success) {
            updateDEEDataAndContent(jddId, data);
        }
    });
}



/**
 * Ajax request to cancel a job and delete export file.
 * By SQL cascade it is also removed from jdd table.
 *
 * @param $jddId
 * @param $exportFileId
 * @param $comment
 */
function cancelExport($jddId, $exportFileId, $comment) {
    $.getJSON( "/gmlexport/cancel-export", {
        jddId: $jddId,
        id: $exportFileId,
        comment: $comment
    },function( data ) {
        if (data.success) {
            updateDEEStatusAndContent($jddId, $exportFileId, data.status);
            window.location.reload(true);
        }
    });
}


var DEEtimerId;

$(function(){
    console.log('Coucou');
    $('.dee').each(function() {
        // var $exportFileId = $(this).attr('data-export-file-id');
        var $jddId = $(this).attr('data-jdd-id');
        // var $deeId =  $(this).attr('data-jdd-id');
        updateDEEDataAndContent($jddId); //, $exportFileId);
    });

    // Periodically update progress for running and pending jobs
    DEEtimerId = setInterval(updateAllDEEGeneratingTasks , 1000);
});